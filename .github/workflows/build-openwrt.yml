name: Build-OpenWrt

on:
  push:
    branches: 
      - main
  workflow_dispatch:
#  release:
#    types: published
#  schedule:
#    - cron: 0 8 * * 5
#  watch:
#    types: started
#  repository_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
#    timeout-minutes: 360

    steps:
    - name: Clone Repository
      uses: actions/checkout@v2
    - name: Init Compilation Dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5 libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip python3-ply python3-docutils python3-pyelftools qemu-utils re2c rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
    - name: Clone Source
      run: |
        cd /home/runner
        bash ${GITHUB_WORKSPACE}/clone_source.sh
        sudo chown -R runner:runner immortalwrt
    - name: Before Build
      run: |
        /bin/bash ${GITHUB_WORKSPACE}/before_build.sh
        cp -fpR ${GITHUB_WORKSPACE}/. /home/runner/immortalwrt/

#    - name: SSH connection to Actions
#      uses: csexton/debugger-action@master

    - name: Start Build
      run: | 
        cd /home/runner/immortalwrt
        mv .config .config_default
        rm -f .config.old
        config_names="$(ls .config*)"
        for i in $config_names;do mv -f $i .config; make defconfig; make -j$[$(nproc)+1] V=sc; rm -rf build_dir/target* build_dir/toolchain* staging_dir/target* staging_dir/toolchain*; done
    - name: After Build
      run: |
        /bin/bash /home/runner/immortalwrt/after_build.sh
    - name: Upload Packages
      uses: actions/upload-artifact@v2
      with:
        name: Packages
        path: /home/runner/immortalwrt/bin/packages/
    - name: Upload Firmwares
      uses: actions/upload-artifact@v2
      with:
        name: Firmwares
        path: /home/runner/immortalwrt/bin/targets/
